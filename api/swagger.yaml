---
swagger: "2.0"
info:
  description: "This is a simple server. CRUD of user and bank agency. Take a look\
    \ at my [GitHub](https://github.com/rodrigoncalves)."
  version: "1.0.0"
  title: "Bank account"
  contact:
    email: "rodrigosg2000@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v2"
tags:
- name: "agency"
  description: "Agency operations"
- name: "user"
  description: "User operations"
schemes:
- "https"
- "http"
paths:
  /agency:
    get:
      tags:
      - "agency"
      summary: "Find all agencies"
      description: ""
      operationId: "getAllAgencies"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "Success operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Agency"
      x-swagger-router-controller: "Agency"
    post:
      tags:
      - "agency"
      summary: "Add a new agency"
      description: ""
      operationId: "addAgency"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Agency"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Agency"
    put:
      tags:
      - "agency"
      summary: "Update an existing agency"
      description: ""
      operationId: "updateAgency"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Agency"
      responses:
        200:
          description: "Success operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Agency not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "Agency"
  /agency/{agencyId}:
    get:
      tags:
      - "agency"
      summary: "Find agency by ID"
      description: "Returns a single agency"
      operationId: "getAgencyById"
      produces:
      - "application/json"
      parameters:
      - name: "agencyId"
        in: "path"
        description: "ID of agency to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Agency"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Agency not found"
      x-swagger-router-controller: "Agency"
    post:
      tags:
      - "agency"
      summary: "Updates an agency in the store with form data"
      description: ""
      operationId: "updateAgencyWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "agencyId"
        in: "path"
        description: "ID of agency that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the agency"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the agency"
        required: false
        type: "string"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Agency"
    delete:
      tags:
      - "agency"
      summary: "Deletes an agency"
      description: ""
      operationId: "deleteAgency"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "agencyId"
        in: "path"
        description: "Agency id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Agency not found"
      x-swagger-router-controller: "Agency"
  /user:
    get:
      tags:
      - "user"
      summary: "Find all users"
      description: ""
      operationId: "getAllUsers"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
    post:
      tags:
      - "user"
      summary: "Create user"
      description: ""
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Get user by userId"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The name that needs to be fetched."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid userId supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid userId supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
definitions:
  Agency:
    type: "object"
    required:
    - "ag"
    - "bank"
    properties:
      id:
        type: "integer"
        format: "int64"
      bank:
        type: "string"
        example: "Banco do Brasil"
      ag:
        type: "string"
        example: "2090-0"
      address:
        type: "string"
    example:
      bank: "Banco do Brasil"
      address: "address"
      ag: "2090-0"
      id: 0
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      cep:
        type: "string"
      account:
        type: "string"
        description: "Bank account"
      agency:
        $ref: "#/definitions/Agency"
    example:
      agency:
        bank: "Banco do Brasil"
        address: "address"
        ag: "2090-0"
        id: 0
      name: "name"
      id: 0
      email: "email"
      account: "account"
      cep: "cep"
